{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODEGYM\\\\CODEGYM\\\\REACTJS\\\\duonghuuthanh\\\\demoapp\\\\src\\\\DemoApp2Effect.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/**\r\n * SỬ DỤNG USEREFFECT KO CÓ DEPENDENCIES\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies không có giá trị thì useEffect sẽ chạy rerender hoài\r\n    })\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n */\n\n/**\r\n// * SỬ DỤNG USEREFFECT CÓ DEPENDENCIES: RỖNG []\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random 1 lần lúc nạp\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies là RỖNG thì useEffect chỉ chạy 1 lần lúc nạp\r\n    }, [])\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n*/\n\n/** Nếu dependecies là 1 State kw, nếu giá trị của state thay đổi thì hàm useEffect sẽ được gọi lại\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n    const [kw, setKw] = useState();\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data.filter(u=>u.name.indexOf(kw)>=0))\r\n            // setUsers(data);\r\n        })\r\n        // Nếu dependecies là 1 State kw, nếu giá trị của state thay đổi thì hàm useEffect sẽ được gọi lại\r\n    }, [kw])\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={kw} onChange={evt=> setKw(evt.target.value)}\r\n                placeholder=\"Enter keyword...\"\r\n            ></input>\r\n            <ul>\r\n                {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n */\n// TRONG useEffect có 1 function và trong function này có return 1 function dùng để giải phóng, unmount\n// khi render\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DemoApp2Effect = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [kw, setKw] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    // Ở đây nó sẽ gọi hàm random liên tục\n    // console.log(Math.random())\n    fetch(\"data.json\").then(res => res.json()).then(data => {\n      setUsers(data.filter(u => u.name.indexOf(kw) >= 0)); // setUsers(data);\n    }); // Nếu dependecies là 1 State kw, nếu giá trị của state thay đổi thì hàm useEffect sẽ được gọi lại\n  }, [kw]);\n  /**\r\n   * (alias) useEffect(effect: React.EffectCallback, deps?: React.DependencyList | undefined): void\r\n      import useEffect\r\n      Accepts a function that contains imperative, possibly effectful code.\r\n        @param effect — Imperative function that can return a cleanup function\r\n        @param deps — If present, effect will only activate if the values in the list change.\r\n   */\n\n  useEffect(() => {\n    let timer = setTimeout(() => setCounter(counter + 1), 1000); // CẦN chú ý để sử dụng cho hợp lý\n\n    return () => {\n      console.log(\"CLEANUP FUNCTION: \" + Math.random());\n      clearTimeout(timer);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: kw,\n      onChange: evt => setKw(evt.target.value),\n      placeholder: \"Enter keyword...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: u.name\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DemoApp2Effect, \"Zj5Hwq8EBmpdQb0ymjKUcUjVh5w=\");\n\n_c = DemoApp2Effect;\nexport default DemoApp2Effect;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoApp2Effect\");","map":{"version":3,"names":["useState","useEffect","DemoApp2Effect","users","setUsers","kw","setKw","counter","setCounter","fetch","then","res","json","data","filter","u","name","indexOf","timer","setTimeout","console","log","Math","random","clearTimeout","evt","target","value","map","id"],"sources":["D:/CODEGYM/CODEGYM/REACTJS/duonghuuthanh/demoapp/src/DemoApp2Effect.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * SỬ DỤNG USEREFFECT KO CÓ DEPENDENCIES\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies không có giá trị thì useEffect sẽ chạy rerender hoài\r\n    })\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n */\r\n\r\n/**\r\n// * SỬ DỤNG USEREFFECT CÓ DEPENDENCIES: RỖNG []\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random 1 lần lúc nạp\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies là RỖNG thì useEffect chỉ chạy 1 lần lúc nạp\r\n    }, [])\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n*/\r\n/** Nếu dependecies là 1 State kw, nếu giá trị của state thay đổi thì hàm useEffect sẽ được gọi lại\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n    const [kw, setKw] = useState();\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data.filter(u=>u.name.indexOf(kw)>=0))\r\n            // setUsers(data);\r\n        })\r\n        // Nếu dependecies là 1 State kw, nếu giá trị của state thay đổi thì hàm useEffect sẽ được gọi lại\r\n    }, [kw])\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={kw} onChange={evt=> setKw(evt.target.value)}\r\n                placeholder=\"Enter keyword...\"\r\n            ></input>\r\n            <ul>\r\n                {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n */\r\n\r\n// TRONG useEffect có 1 function và trong function này có return 1 function dùng để giải phóng, unmount\r\n// khi render\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n    const [kw, setKw] = useState(\"\");\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        // console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data.filter(u=>u.name.indexOf(kw)>=0))\r\n            // setUsers(data);\r\n        })\r\n\r\n        // Nếu dependecies là 1 State kw, nếu giá trị của state thay đổi thì hàm useEffect sẽ được gọi lại\r\n    }, [kw]);\r\n    /**\r\n     * (alias) useEffect(effect: React.EffectCallback, deps?: React.DependencyList | undefined): void\r\n        import useEffect\r\n        Accepts a function that contains imperative, possibly effectful code.\r\n\r\n        @param effect — Imperative function that can return a cleanup function\r\n\r\n        @param deps — If present, effect will only activate if the values in the list change.\r\n     */\r\n    useEffect(()=>{\r\n        let timer = setTimeout(()=> setCounter(counter+1), 1000);\r\n        // CẦN chú ý để sử dụng cho hợp lý\r\n        return ()=>{\r\n            console.log(\"CLEANUP FUNCTION: \" + Math.random());\r\n            clearTimeout(timer)\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <h1>Counter: {counter}</h1>\r\n            <input type=\"text\" value={kw} onChange={evt=> setKw(evt.target.value)}\r\n                placeholder=\"Enter keyword...\"\r\n            ></input>\r\n            <ul>\r\n                {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default DemoApp2Effect;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;AACA,MAAMC,cAAc,GAAG,MAAI;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAI;IACV;IACA;IACAQ,KAAK,CAAC,WAAD,CAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAA9B,EAA0CF,IAA1C,CAA+CG,IAAI,IAAG;MAClDT,QAAQ,CAACS,IAAI,CAACC,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAeZ,EAAf,KAAoB,CAAnC,CAAD,CAAR,CADkD,CAElD;IACH,CAHD,EAHU,CAQV;EACH,CATQ,EASN,CAACA,EAAD,CATM,CAAT;EAUA;AACJ;AACA;AACA;AACA;AACA;AACA;;EAGIJ,SAAS,CAAC,MAAI;IACV,IAAIiB,KAAK,GAAGC,UAAU,CAAC,MAAKX,UAAU,CAACD,OAAO,GAAC,CAAT,CAAhB,EAA6B,IAA7B,CAAtB,CADU,CAEV;;IACA,OAAO,MAAI;MACPa,OAAO,CAACC,GAAR,CAAY,uBAAuBC,IAAI,CAACC,MAAL,EAAnC;MACAC,YAAY,CAACN,KAAD,CAAZ;IACH,CAHD;EAIH,CAPQ,CAAT;EAQA,oBACI;IAAA,wBACI;MAAA,wBAAcX,OAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEF,EAA1B;MAA8B,QAAQ,EAAEoB,GAAG,IAAGnB,KAAK,CAACmB,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAnD;MACI,WAAW,EAAC;IADhB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAA,UACKxB,KAAK,CAACyB,GAAN,CAAUb,CAAC,iBAAG;QAAA,UAAgBA,CAAC,CAACC;MAAlB,GAASD,CAAC,CAACc,EAAX;QAAA;QAAA;QAAA;MAAA,QAAd;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA,gBADJ;AAWH,CA3CD;;GAAM3B,c;;KAAAA,c;AA4CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}