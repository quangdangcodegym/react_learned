{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODEGYM\\\\CODEGYM\\\\REACTJS\\\\duonghuuthanh\\\\demoapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DemoApp1 from './DemoApp1';\nimport DemoApp2 from './DemoApp2';\nimport DemoApp1State from './DemoApp1State';\nimport DemoApp2State from './DemoApp2State';\nimport DemoApp2Effect from './DemoApp2Effect';\nimport DemoRouterApp from './DemoRouterApp';\nimport DemoReducer from './DemoReducer';\nimport LoginApp from './LoginApp';\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './reducers/counterReducer';\nimport DemoReactReduxMainApp from './DemoReactReduxMainApp';\nimport { Provider } from 'react-redux';\nimport DemoReactRedux from './DemoReactRedux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet obj = {\n  \"firstName\": \"Quang\",\n  \"lastName\": \"Dang\",\n  \"country\": \"VietNam\",\n  \"gender\": \"Nam\",\n  \"location\": \"Go Vap\"\n};\n/**\n * Tạo store, và đăng kí root element với store\n    Sử dụng redux thuần: \n    <DemoReactReduxMainApp  value={store.getState().counter}\n      inc={()=> store.dispatch({\"type\": \"inc\"})}\n      dec={()=> store.dispatch({\"type\": \"dec\"})}\n    />\n\n    Sử dụng thư viện react-redux: ta có thêm 2 cái hook useSelector(), và useDispatch()\n */\n\nconst store = configureStore({\n  reducer: {\n    \"counter\": counterReducer\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst render = () => root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    children: /*#__PURE__*/_jsxDEV(DemoReactRedux, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this));\n\nrender();\nstore.subscribe(render); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","DemoApp1","DemoApp2","DemoApp1State","DemoApp2State","DemoApp2Effect","DemoRouterApp","DemoReducer","LoginApp","configureStore","counterReducer","DemoReactReduxMainApp","Provider","DemoReactRedux","obj","store","reducer","root","createRoot","document","getElementById","render","subscribe"],"sources":["D:/CODEGYM/CODEGYM/REACTJS/duonghuuthanh/demoapp/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DemoApp1 from './DemoApp1';\nimport DemoApp2 from './DemoApp2';\nimport DemoApp1State from './DemoApp1State';\nimport DemoApp2State from './DemoApp2State';\nimport DemoApp2Effect from './DemoApp2Effect';\nimport DemoRouterApp from './DemoRouterApp';\nimport DemoReducer from './DemoReducer';\nimport LoginApp from './LoginApp';\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './reducers/counterReducer';\nimport DemoReactReduxMainApp from './DemoReactReduxMainApp';\nimport { Provider } from 'react-redux';\nimport DemoReactRedux from './DemoReactRedux';\nlet obj = {\n  \"firstName\": \"Quang\", \n  \"lastName\": \"Dang\",\n  \"country\": \"VietNam\",\n  \"gender\": \"Nam\",\n  \"location\": \"Go Vap\"\n}\n\n/**\n * Tạo store, và đăng kí root element với store\n    Sử dụng redux thuần: \n    <DemoReactReduxMainApp  value={store.getState().counter}\n      inc={()=> store.dispatch({\"type\": \"inc\"})}\n      dec={()=> store.dispatch({\"type\": \"dec\"})}\n    />\n\n    Sử dụng thư viện react-redux: ta có thêm 2 cái hook useSelector(), và useDispatch()\n */\nconst store = configureStore({\n  reducer: {\n    \"counter\": counterReducer\n  }\n})\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst render = () => root.render(\n  <React.StrictMode>\n    {/* <LoginApp  {...obj}/> */}\n    <Provider>\n        <DemoReactRedux />\n    </Provider>\n  </React.StrictMode>\n);\nrender();\n\nstore.subscribe(render);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,IAAIC,GAAG,GAAG;EACR,aAAa,OADL;EAER,YAAY,MAFJ;EAGR,WAAW,SAHH;EAIR,UAAU,KAJF;EAKR,YAAY;AALJ,CAAV;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGN,cAAc,CAAC;EAC3BO,OAAO,EAAE;IACP,WAAWN;EADJ;AADkB,CAAD,CAA5B;AAKA,MAAMO,IAAI,GAAGnB,QAAQ,CAACoB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;;AACA,MAAMC,MAAM,GAAG,MAAMJ,IAAI,CAACI,MAAL,eACnB,QAAC,KAAD,CAAO,UAAP;EAAA,uBAEE,QAAC,QAAD;IAAA,uBACI,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA;AAFF;EAAA;EAAA;EAAA;AAAA,QADmB,CAArB;;AAQAA,MAAM;AAENN,KAAK,CAACO,SAAN,CAAgBD,MAAhB,E,CACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}