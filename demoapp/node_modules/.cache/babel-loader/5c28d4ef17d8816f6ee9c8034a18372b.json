{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODEGYM\\\\CODEGYM\\\\REACTJS\\\\duonghuuthanh\\\\demoapp\\\\src\\\\DemoApp2Effect.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/**\r\n * SỬ DỤNG USEREFFECT KO CÓ DEPENDENCIES\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies không có giá trị thì useEffect sẽ chạy rerender hoài\r\n    })\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n */\n\n/**\r\n// * SỬ DỤNG USEREFFECT CÓ DEPENDENCIES: RỖNG []\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random 1 lần lúc nạp\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies là RỖNG thì useEffect chỉ chạy 1 lần lúc nạp\r\n    }, [])\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DemoApp2Effect = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [kw, setKw] = useState();\n  useEffect(() => {\n    // Ở đây nó sẽ gọi hàm random liên tục\n    console.log(Math.random());\n    fetch(\"data.json\").then(res => res.json()).then(data => {\n      setUsers(data);\n    }); // Nếu dependecies là 1 State kw\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: kw,\n      onChange: evt => setKw(evt.target.value),\n      placeholder: \"Enter keyword...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: u.name\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DemoApp2Effect, \"wLcRySOdk8nnagWx4Ird00bTwe4=\");\n\n_c = DemoApp2Effect;\nexport default DemoApp2Effect;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoApp2Effect\");","map":{"version":3,"names":["useState","useEffect","DemoApp2Effect","users","setUsers","kw","setKw","console","log","Math","random","fetch","then","res","json","data","evt","target","value","map","u","name","id"],"sources":["D:/CODEGYM/CODEGYM/REACTJS/duonghuuthanh/demoapp/src/DemoApp2Effect.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * SỬ DỤNG USEREFFECT KO CÓ DEPENDENCIES\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies không có giá trị thì useEffect sẽ chạy rerender hoài\r\n    })\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n */\r\n\r\n/**\r\n// * SỬ DỤNG USEREFFECT CÓ DEPENDENCIES: RỖNG []\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random 1 lần lúc nạp\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies là RỖNG thì useEffect chỉ chạy 1 lần lúc nạp\r\n    }, [])\r\n    return (\r\n        <ul>\r\n            {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n*/\r\n\r\nconst DemoApp2Effect = ()=>{\r\n    const [users, setUsers] = useState([])\r\n    const [kw, setKw] = useState();\r\n\r\n    useEffect(()=>{\r\n        // Ở đây nó sẽ gọi hàm random liên tục\r\n        console.log(Math.random())\r\n        fetch(\"data.json\").then(res=> res.json()).then(data=> {\r\n            setUsers(data)\r\n        })\r\n        // Nếu dependecies là 1 State kw\r\n    }, [])\r\n    return (\r\n        <>\r\n            <input type=\"text\" value={kw} onChange={evt=> setKw(evt.target.value)}\r\n                placeholder=\"Enter keyword...\"\r\n            ></input>\r\n            <ul>\r\n                {users.map(u=> <li key={u.id}>{u.name}</li>)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default DemoApp2Effect;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,cAAc,GAAG,MAAI;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,EAAD,EAAKC,KAAL,IAAcN,QAAQ,EAA5B;EAEAC,SAAS,CAAC,MAAI;IACV;IACAM,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,MAAL,EAAZ;IACAC,KAAK,CAAC,WAAD,CAAL,CAAmBC,IAAnB,CAAwBC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAA9B,EAA0CF,IAA1C,CAA+CG,IAAI,IAAG;MAClDX,QAAQ,CAACW,IAAD,CAAR;IACH,CAFD,EAHU,CAMV;EACH,CAPQ,EAON,EAPM,CAAT;EAQA,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEV,EAA1B;MAA8B,QAAQ,EAAEW,GAAG,IAAGV,KAAK,CAACU,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAnD;MACI,WAAW,EAAC;IADhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA,UACKf,KAAK,CAACgB,GAAN,CAAUC,CAAC,iBAAG;QAAA,UAAgBA,CAAC,CAACC;MAAlB,GAASD,CAAC,CAACE,EAAX;QAAA;QAAA;QAAA;MAAA,QAAd;IADL;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAUH,CAtBD;;GAAMpB,c;;KAAAA,c;AAuBN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}